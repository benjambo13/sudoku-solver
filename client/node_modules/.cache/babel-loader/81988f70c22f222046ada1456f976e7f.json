{"ast":null,"code":"import _classCallCheck from\"/Users/ben/sudoku-solver/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ben/sudoku-solver/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ben/sudoku-solver/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ben/sudoku-solver/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ben/sudoku-solver/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Accordion,Card}from'react-bootstrap';import text from'./text';var Steps=/*#__PURE__*/function(_React$Component){_inherits(Steps,_React$Component);function Steps(){_classCallCheck(this,Steps);return _possibleConstructorReturn(this,_getPrototypeOf(Steps).apply(this,arguments));}_createClass(Steps,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(Accordion,{defaultActiveKey:\"1\"},React.createElement(Card,null,React.createElement(Accordion.Toggle,{style:toggleStyle,as:Card.Header,eventKey:\"1\"},\"Step 1 - Generate the initial population\"),React.createElement(Accordion.Collapse,{eventKey:\"1\"},React.createElement(Card.Body,null,text[1]))),React.createElement(Card,null,React.createElement(Accordion.Toggle,{style:toggleStyle,as:Card.Header,eventKey:\"2\"},\"Step 2 - Evaulate the fitness of each solution\"),React.createElement(Accordion.Collapse,{eventKey:\"2\"},React.createElement(Card.Body,null,text[2]))),React.createElement(Card,null,React.createElement(Accordion.Toggle,{style:toggleStyle,as:Card.Header,eventKey:\"3\"},\"Step 3 - Selecting parents\"),React.createElement(Accordion.Collapse,{eventKey:\"3\"},React.createElement(Card.Body,null,text[3]))),React.createElement(Card,null,React.createElement(Accordion.Toggle,{style:toggleStyle,as:Card.Header,eventKey:\"4\"},\"Step 4 - Breed new solutions through crossover\"),React.createElement(Accordion.Collapse,{eventKey:\"4\"},React.createElement(Card.Body,null,text[4]))),React.createElement(Card,null,React.createElement(Accordion.Toggle,{style:toggleStyle,as:Card.Header,eventKey:\"5\"},\"Step 5 - Mutate the offspring solutions\"),React.createElement(Accordion.Collapse,{eventKey:\"5\"},React.createElement(Card.Body,null,text[5]))),React.createElement(Card,null,React.createElement(Accordion.Toggle,{style:toggleStyle,as:Card.Header,eventKey:\"6\"},\"Step 6 - Repeat steps 3, 4 and 5\"),React.createElement(Accordion.Collapse,{eventKey:\"6\"},React.createElement(Card.Body,null,text[6])))));}}]);return Steps;}(React.Component);var toggleStyle={backgroundColor:\"#444b52\",color:\"white\"};export default Steps;","map":{"version":3,"sources":["/Users/ben/sudoku-solver/client/src/Components/About/steps.js"],"names":["React","Accordion","Card","text","Steps","toggleStyle","Header","Component","backgroundColor","color"],"mappings":"wkBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,IAApB,KAAgC,iBAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,GAEMC,CAAAA,K,uQAEO,CACL,MACI,gCACI,oBAAC,SAAD,EAAW,gBAAgB,CAAC,GAA5B,EACI,oBAAC,IAAD,MACI,oBAAC,SAAD,CAAW,MAAX,EAAkB,KAAK,CAAEC,WAAzB,CAAsC,EAAE,CAAEH,IAAI,CAACI,MAA/C,CAAuD,QAAQ,CAAC,GAAhE,6CADJ,CAEI,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAC,GAA7B,EACI,oBAAC,IAAD,CAAM,IAAN,MAAYH,IAAI,CAAC,CAAD,CAAhB,CADJ,CAFJ,CADJ,CAOI,oBAAC,IAAD,MACI,oBAAC,SAAD,CAAW,MAAX,EAAkB,KAAK,CAAEE,WAAzB,CAAsC,EAAE,CAAEH,IAAI,CAACI,MAA/C,CAAuD,QAAQ,CAAC,GAAhE,mDADJ,CAEI,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAC,GAA7B,EACI,oBAAC,IAAD,CAAM,IAAN,MAAYH,IAAI,CAAC,CAAD,CAAhB,CADJ,CAFJ,CAPJ,CAaI,oBAAC,IAAD,MACI,oBAAC,SAAD,CAAW,MAAX,EAAkB,KAAK,CAAEE,WAAzB,CAAsC,EAAE,CAAEH,IAAI,CAACI,MAA/C,CAAuD,QAAQ,CAAC,GAAhE,+BADJ,CAEI,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAC,GAA7B,EACI,oBAAC,IAAD,CAAM,IAAN,MAAYH,IAAI,CAAC,CAAD,CAAhB,CADJ,CAFJ,CAbJ,CAmBI,oBAAC,IAAD,MACI,oBAAC,SAAD,CAAW,MAAX,EAAkB,KAAK,CAAEE,WAAzB,CAAsC,EAAE,CAAEH,IAAI,CAACI,MAA/C,CAAuD,QAAQ,CAAC,GAAhE,mDADJ,CAEI,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAC,GAA7B,EACI,oBAAC,IAAD,CAAM,IAAN,MAAYH,IAAI,CAAC,CAAD,CAAhB,CADJ,CAFJ,CAnBJ,CAyBI,oBAAC,IAAD,MACI,oBAAC,SAAD,CAAW,MAAX,EAAkB,KAAK,CAAEE,WAAzB,CAAsC,EAAE,CAAEH,IAAI,CAACI,MAA/C,CAAuD,QAAQ,CAAC,GAAhE,4CADJ,CAEI,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAC,GAA7B,EACI,oBAAC,IAAD,CAAM,IAAN,MAAYH,IAAI,CAAC,CAAD,CAAhB,CADJ,CAFJ,CAzBJ,CA+BI,oBAAC,IAAD,MACI,oBAAC,SAAD,CAAW,MAAX,EAAkB,KAAK,CAAEE,WAAzB,CAAsC,EAAE,CAAEH,IAAI,CAACI,MAA/C,CAAuD,QAAQ,CAAC,GAAhE,qCADJ,CAEI,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAC,GAA7B,EACI,oBAAC,IAAD,CAAM,IAAN,MAAYH,IAAI,CAAC,CAAD,CAAhB,CADJ,CAFJ,CA/BJ,CADJ,CADJ,CA0CH,C,mBA7CeH,KAAK,CAACO,S,EAgD1B,GAAMF,CAAAA,WAAW,CAAG,CAChBG,eAAe,CAAE,SADD,CAEhBC,KAAK,CAAE,OAFS,CAApB,CAKA,cAAeL,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport text from './text';\n\nclass Steps extends React.Component\n{\n    render() {\n        return (\n            <div>\n                <Accordion defaultActiveKey='1'>\n                    <Card>\n                        <Accordion.Toggle style={toggleStyle} as={Card.Header} eventKey='1'>Step 1 - Generate the initial population</Accordion.Toggle>\n                        <Accordion.Collapse eventKey='1'>\n                            <Card.Body>{text[1]}</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle style={toggleStyle} as={Card.Header} eventKey='2'>Step 2 - Evaulate the fitness of each solution</Accordion.Toggle>\n                        <Accordion.Collapse eventKey='2'>\n                            <Card.Body>{text[2]}</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle style={toggleStyle} as={Card.Header} eventKey='3'>Step 3 - Selecting parents</Accordion.Toggle>\n                        <Accordion.Collapse eventKey='3'>\n                            <Card.Body>{text[3]}</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle style={toggleStyle} as={Card.Header} eventKey='4'>Step 4 - Breed new solutions through crossover</Accordion.Toggle>\n                        <Accordion.Collapse eventKey='4'>\n                            <Card.Body>{text[4]}</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle style={toggleStyle} as={Card.Header} eventKey='5'>Step 5 - Mutate the offspring solutions</Accordion.Toggle>\n                        <Accordion.Collapse eventKey='5'>\n                            <Card.Body>{text[5]}</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle style={toggleStyle} as={Card.Header} eventKey='6'>Step 6 - Repeat steps 3, 4 and 5</Accordion.Toggle>\n                        <Accordion.Collapse eventKey='6'>\n                            <Card.Body>{text[6]}</Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            </div>\n        )\n    }\n}\n\nconst toggleStyle = {\n    backgroundColor: \"#444b52\",\n    color: \"white\",\n}\n\nexport default Steps;"]},"metadata":{},"sourceType":"module"}