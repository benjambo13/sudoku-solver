{"ast":null,"code":"var _jsxFileName = \"/Users/ben/SudokuSolver/client/src/Components/main.js\";\nimport React from 'react';\nimport Sudoku from './sudoku';\nimport NumberButtons from './numberButtons';\nimport ActionButtons from './actionButtons';\nimport axios from 'axios';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.solveOnServer = () => {\n      axios.post(\"http://localhost:9000/API/solver\", {\n        grid: this.state.sudoku\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          sudoku: res.data\n        });\n      });\n    };\n\n    this.setSelected = newSelected => {\n      document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: none\");\n      this.setState({\n        selected: newSelected\n      });\n      document.getElementById(\"i\" + newSelected).setAttribute(\"style\", \"background-color: #dee2e6\");\n    };\n\n    this.componentDidMount = () => {\n      document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: #dee2e6\");\n    };\n\n    this.changeNumber = number => {\n      var newSudoku = [...this.state.sudoku];\n      newSudoku[this.state.selected] = number;\n      this.setState({\n        sudoku: newSudoku\n      });\n    };\n\n    this.clearGrid = () => {\n      var newSudoku = [...this.state.sudoku].map(elem => \" \");\n      this.setState({\n        sudoku: newSudoku\n      });\n    };\n\n    this.newRandomGrid = () => {\n      console.log(\"new\");\n    };\n\n    this.state = {\n      apiResponse: \"\",\n      sudokun      selected: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12 justify-content-md-center\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Sudoku, {\n      sudoku: this.state.sudoku,\n      selected: this.state.selected,\n      setSelected: this.setSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(NumberButtons, {\n      changeNumber: this.changeNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ActionButtons, {\n      solveOnServer: this.solveOnServer,\n      clearGrid: this.clearGrid,\n      newRandomGrid: this.newRandomGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/ben/SudokuSolver/client/src/Components/main.js"],"names":["React","Sudoku","NumberButtons","ActionButtons","axios","Main","Component","constructor","props","solveOnServer","post","grid","state","sudoku","then","res","console","log","data","setState","setSelected","newSelected","document","getElementById","selected","setAttribute","componentDidMount","changeNumber","number","newSudoku","clearGrid","map","elem","newRandomGrid","apiResponse","render","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sudoku from './sudoku';\nimport NumberButtons from './numberButtons'\nimport ActionButtons from './actionButtons'\nimport axios from 'axios';\n\nclass Main extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = { \n            apiResponse: \"\" ,\n            sudoku: [\n                \"3\",\" \",\" \",   \" \",\" \",\"5\",   \" \",\"4\",\"7\",\n                \" \",\" \",\"6\",   \" \",\"4\",\"2\",   \" \",\" \",\"1\",\n                \" \",\" \",\" \",   \" \",\" \",\"7\",   \"8\",\"9\",\" \",\n              \n                \" \",\"5\",\" \",   \" \",\"1\",\"6\",   \" \",\" \",\"2\",\n                \" \",\" \",\"3\",   \" \",\" \",\" \",   \" \",\" \",\"4\",\n                \"8\",\"1\",\" \",   \" \",\" \",\" \",   \"7\",\" \",\" \",\n              \n                \" \",\" \",\"2\",   \" \",\" \",\" \",   \"4\",\" \",\" \",\n                \"5\",\"6\",\" \",   \"8\",\"7\",\" \",   \"1\",\" \",\" \",\n                \" \",\" \",\" \",   \"3\",\" \",\" \",   \"6\",\" \",\" \"\n              ],\n            selected: 0,\n        };\n    }\n    \n    solveOnServer = () => {\n        axios.post(\"http://localhost:9000/API/solver\", {grid: this.state.sudoku})\n            .then(res => {\n                console.log(res.data)\n                this.setState({sudoku: res.data})\n            });\n    }\n\n    setSelected = (newSelected) => {\n        document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: none\")\n        this.setState({selected: newSelected})\n        document.getElementById(\"i\" + newSelected).setAttribute(\"style\", \"background-color: #dee2e6\")\n    }\n\n    componentDidMount = () => {\n        document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: #dee2e6\")\n    }\n\n    changeNumber = (number) => {\n        var newSudoku = [...this.state.sudoku]\n        newSudoku[this.state.selected] = number\n        this.setState({sudoku: newSudoku})\n    }\n\n    clearGrid = () => {\n        var newSudoku = [...this.state.sudoku].map(elem => \" \")\n        this.setState({sudoku: newSudoku})\n    }\n\n    newRandomGrid = () => {\n        console.log(\"new\")\n    }\n\n    render()\n    {\n        return (\n            <div className=\"col-md-12 justify-content-md-center\" style={{textAlign: \"center\"}}>\n                <Sudoku sudoku={this.state.sudoku} selected={this.state.selected} setSelected={this.setSelected}/>\n                <NumberButtons changeNumber={this.changeNumber}/>\n                <ActionButtons solveOnServer={this.solveOnServer} clearGrid={this.clearGrid} newRandomGrid={this.newRandomGrid}/>\n            </div>\n        );\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}