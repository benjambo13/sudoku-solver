{"ast":null,"code":"var _jsxFileName = \"/Users/ben/SudokuSolver/client/src/Components/main.js\";\nimport React from 'react';\nimport Sudoku from './sudoku';\nimport NumberButtons from './numberButtons';\nimport ActionButtons from './actionButtons';\nimport axios from 'axios';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.newRandomGrid = () => {\n      axios.get(\"http://localhost:9000/api/random\").then(res => {\n        this.setState({\n          sudoku: res.data\n        });\n      });\n    };\n\n    this.solveOnServer = () => {\n      axios.post(\"http://localhost:9000/api/solver\", {\n        grid: this.state.sudoku\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          sudoku: res.data\n        });\n      });\n    };\n\n    this.setSelected = newSelected => {\n      document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: none\");\n      this.setState({\n        selected: newSelected\n      });\n      document.getElementById(\"i\" + newSelected).setAttribute(\"style\", \"background-color: #dee2e6\");\n    };\n\n    this.changeNumber = number => {\n      var newSudoku = [...this.state.sudoku];\n      newSudoku[this.state.selected] = number;\n      this.setState({\n        sudoku: newSudoku\n      });\n    };\n\n    this.clearGrid = () => {\n      var newSudoku = [...this.state.sudoku].map(elem => \" \");\n      this.setState({\n        sudoku: newSudoku\n      });\n    };\n\n    this.componentDidMount = () => {\n      document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: #dee2e6\");\n    };\n\n    this.state = {\n      response: \"\",\n      sudoku: firstGrid,\n      selected: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12 justify-content-md-center\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Sudoku, {\n      sudoku: this.state.sudoku,\n      selected: this.state.selected,\n      setSelected: this.setSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(NumberButtons, {\n      changeNumber: this.changeNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ActionButtons, {\n      solveOnServer: this.solveOnServer,\n      clearGrid: this.clearGrid,\n      newRandomGrid: this.newRandomGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.response));\n  }\n\n}\n\nconst firstGrid = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''];\nexport default Main;","map":{"version":3,"sources":["/Users/ben/SudokuSolver/client/src/Components/main.js"],"names":["React","Sudoku","NumberButtons","ActionButtons","axios","Main","Component","constructor","props","newRandomGrid","get","then","res","setState","sudoku","data","solveOnServer","post","grid","state","console","log","setSelected","newSelected","document","getElementById","selected","setAttribute","changeNumber","number","newSudoku","clearGrid","map","elem","componentDidMount","response","firstGrid","render","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sudoku from './sudoku';\nimport NumberButtons from './numberButtons'\nimport ActionButtons from './actionButtons'\nimport axios from 'axios';\n\nclass Main extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = { \n            response: \"\" ,\n            sudoku: firstGrid,\n            selected: 0,\n        };\n    }\n\n    newRandomGrid = () => {\n        axios.get(\"http://localhost:9000/api/random\")\n            .then(res => {\n                this.setState({sudoku: res.data})\n            });\n    }\n    \n    solveOnServer = () => {\n        axios.post(\"http://localhost:9000/api/solver\", {grid: this.state.sudoku})\n            .then(res => {\n                console.log(res.data)\n                this.setState({sudoku: res.data})\n            });\n    }\n\n    setSelected = (newSelected) => {\n        document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: none\")\n        this.setState({selected: newSelected})\n        document.getElementById(\"i\" + newSelected).setAttribute(\"style\", \"background-color: #dee2e6\")\n    }\n\n    changeNumber = (number) => {\n        var newSudoku = [...this.state.sudoku]\n        newSudoku[this.state.selected] = number\n        this.setState({sudoku: newSudoku})\n    }\n\n    clearGrid = () => {\n        var newSudoku = [...this.state.sudoku].map(elem => \" \")\n        this.setState({sudoku: newSudoku})\n    }\n\n    componentDidMount = () => {\n        document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: #dee2e6\")\n    }\n\n    render()\n    {\n        return (\n            <div className=\"col-md-12 justify-content-md-center\" style={{textAlign: \"center\"}}>\n                <Sudoku sudoku={this.state.sudoku} selected={this.state.selected} setSelected={this.setSelected}/>\n                <NumberButtons changeNumber={this.changeNumber}/>\n                <ActionButtons solveOnServer={this.solveOnServer} clearGrid={this.clearGrid} newRandomGrid={this.newRandomGrid}/>\n                <p>{this.state.response}</p>\n            </div>\n        );\n    }\n}\n\nconst firstGrid = [\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n]\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}