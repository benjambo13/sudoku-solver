{"ast":null,"code":"var _jsxFileName = \"/Users/ben/SudokuSolver/client/src/Components/main.js\";\nimport React from 'react';\nimport Sudoku from './sudoku';\nimport NumberButtons from './numberButtons';\nimport ActionButtons from './actionButtons';\nimport axios from 'axios';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateThenSolve = () => {\n      var newLog = [...this.state.log].concat([\"Validating...\"]);\n      this.setState({\n        log: newLog\n      });\n      axios.post(\"http://localhost:9000/api/validate\", {\n        grid: this.state.sudoku\n      }).then(res => {\n        if (res.data) {\n          let newLog = [...this.state.log].concat([\"Grid Validated\"]);\n          this.setState({\n            log: newLog\n          });\n          this.solveOnServer();\n        } else {\n          let newLog = [...this.state.log].concat([\"Invalid Grid\"]);\n          this.setState({\n            log: newLog\n          });\n        }\n      });\n    };\n\n    this.newRandomGrid = () => {\n      axios.get(\"http://localhost:9000/api/random\").then(res => {\n        this.setState({\n          sudoku: res.data\n        });\n      });\n    };\n\n    this.solveOnServer = () => {\n      var newLog = [...this.state.log].concat([\"Solving...\"]);\n      this.setState({\n        log: newLog\n      });\n      axios.post(\"http://localhost:9000/api/solver\", {\n        grid: this.state.sudoku\n      }).then(res => {\n        this.setState({\n          sudoku: res.data[0]\n        });\n        this.setMessage(res.data[1]);\n      });\n    };\n\n    this.setMessage = errorNum => {\n      if (errorNum === 0) {\n        let newLog = [...this.state.log].concat([\"Solution Found!\"]);\n        this.setState({\n          log: newLog\n        });\n      } else {\n        let newLog = [...this.state.log].concat([\"Could not find solution. Number of errors: \" + errorNum]);\n        this.setState({\n          log: newLog\n        });\n      }\n    };\n\n    this.setSelected = newSelected => {\n      document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: none\");\n      this.setState({\n        selected: newSelected\n      });\n      document.getElementById(\"i\" + newSelected).setAttribute(\"style\", \"background-color: #dee2e6\");\n    };\n\n    this.changeNumber = number => {\n      var newSudoku = [...this.state.sudoku];\n      newSudoku[this.state.selected] = number;\n      this.setState({\n        sudoku: newSudoku\n      });\n    };\n\n    this.clearGrid = () => {\n      var newSudoku = [...this.state.sudoku].map(elem => \" \");\n      this.setState({\n        sudoku: newSudoku\n      });\n    };\n\n    this.componentDidMount = () => {\n      document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: #dee2e6\");\n    };\n\n    this.state = {\n      log: [],\n      sudoku: firstGrid,\n      selected: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12 justify-content-md-center\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Sudoku, {\n      sudoku: this.state.sudoku,\n      selected: this.state.selected,\n      setSelected: this.setSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(NumberButtons, {\n      changeNumber: this.changeNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(ActionButtons, {\n      validateThenSolve: this.validateThenSolve,\n      clearGrid: this.clearGrid,\n      newRandomGrid: this.newRandomGrid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), this.state.log.map(message => {\n      React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, message);\n    }));\n  }\n\n}\n\nconst firstGrid = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''];\nexport default Main;","map":{"version":3,"sources":["/Users/ben/SudokuSolver/client/src/Components/main.js"],"names":["React","Sudoku","NumberButtons","ActionButtons","axios","Main","Component","constructor","props","validateThenSolve","newLog","state","log","concat","setState","post","grid","sudoku","then","res","data","solveOnServer","newRandomGrid","get","setMessage","errorNum","setSelected","newSelected","document","getElementById","selected","setAttribute","changeNumber","number","newSudoku","clearGrid","map","elem","componentDidMount","firstGrid","render","textAlign","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sudoku from './sudoku';\nimport NumberButtons from './numberButtons'\nimport ActionButtons from './actionButtons'\nimport axios from 'axios';\n\nclass Main extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = { \n            log: [] ,\n            sudoku: firstGrid,\n            selected: 0,\n        };\n    }\n\n    validateThenSolve = () => {\n        var newLog = [...this.state.log].concat([\"Validating...\"])\n        this.setState({log: newLog})\n        axios.post(\"http://localhost:9000/api/validate\", {grid: this.state.sudoku})\n            .then(res => {\n                if (res.data)\n                {\n                    let newLog = [...this.state.log].concat([\"Grid Validated\"])\n                    this.setState({log: newLog})\n                    this.solveOnServer();\n                }\n                else\n                {\n                    let newLog = [...this.state.log].concat([\"Invalid Grid\"])\n                    this.setState({log: newLog})\n                }\n            });\n    }\n\n    newRandomGrid = () => {\n        axios.get(\"http://localhost:9000/api/random\")\n            .then(res => {\n                this.setState({sudoku: res.data})\n            });\n    }\n    \n    solveOnServer = () => {\n        var newLog = [...this.state.log].concat([\"Solving...\"])\n        this.setState({log: newLog})\n        axios.post(\"http://localhost:9000/api/solver\", {grid: this.state.sudoku})\n            .then(res => {\n                this.setState({sudoku: res.data[0]})\n                this.setMessage(res.data[1])\n            });\n    }\n\n    setMessage = (errorNum) => {\n        if (errorNum === 0)\n        {\n            let newLog = [...this.state.log].concat([\"Solution Found!\"])\n            this.setState({log: newLog})\n        }\n        else\n        {\n            let newLog = [...this.state.log].concat([\"Could not find solution. Number of errors: \" + errorNum])\n            this.setState({log: newLog})\n        }\n    }\n\n    setSelected = (newSelected) => {\n        document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: none\")\n        this.setState({selected: newSelected})\n        document.getElementById(\"i\" + newSelected).setAttribute(\"style\", \"background-color: #dee2e6\")\n    }\n\n    changeNumber = (number) => {\n        var newSudoku = [...this.state.sudoku]\n        newSudoku[this.state.selected] = number\n        this.setState({sudoku: newSudoku})\n    }\n\n    clearGrid = () => {\n        var newSudoku = [...this.state.sudoku].map(elem => \" \")\n        this.setState({sudoku: newSudoku})\n    }\n\n    componentDidMount = () => {\n        document.getElementById(\"i\" + this.state.selected).setAttribute(\"style\", \"background-color: #dee2e6\")\n    }\n\n    render()\n    {\n        return (\n            <div className=\"col-md-12 justify-content-md-center\" style={{textAlign: \"center\"}}>\n                <Sudoku sudoku={this.state.sudoku} selected={this.state.selected} setSelected={this.setSelected}/>\n                <NumberButtons changeNumber={this.changeNumber}/>\n                <ActionButtons validateThenSolve={this.validateThenSolve} clearGrid={this.clearGrid} newRandomGrid={this.newRandomGrid}/>\n                {this.state.log.map((message) => {<p>{message}</p>})}\n            </div>\n        );\n    }\n}\n\nconst firstGrid = [\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n    '','','','','','','','','',\n]\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}