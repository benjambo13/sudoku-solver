{"ast":null,"code":"const intro = `The AI Sudoku Solver is created using the two JavaScript libraries, React.js and Node.js, for the front-end and back-end respectively. The application solves \nsudokus using artificial intelligence, more specifically, an evolutionary algorithm. These algorithms are based on the main evolutionary theory of Charles Darwin - the\nexistence of a population of individuals exposed to environmental pressure, which leads to natural selection. How this theory can be applied to solving sudokus is explained \nbelow.`;\nconst initialization = `The initial population, also known as generation 0, is 15000 different random solutions to the proposed sudoku. Each empty square is given a random\ndigit between 1 and 9. The higher the population size the greater chance of success will be but time of execution will also increase.`;\nexport default intro;","map":{"version":3,"sources":["/Users/ben/SudokuSolver/client/src/Components/About/text.js"],"names":["intro","initialization"],"mappings":"AAAA,MAAMA,KAAK,GAAI;;;OAAf;AAKA,MAAMC,cAAc,GAAI;sIAAxB;AAIA,eAAeD,KAAf","sourcesContent":["const intro = `The AI Sudoku Solver is created using the two JavaScript libraries, React.js and Node.js, for the front-end and back-end respectively. The application solves \nsudokus using artificial intelligence, more specifically, an evolutionary algorithm. These algorithms are based on the main evolutionary theory of Charles Darwin - the\nexistence of a population of individuals exposed to environmental pressure, which leads to natural selection. How this theory can be applied to solving sudokus is explained \nbelow.`\n\nconst initialization = `The initial population, also known as generation 0, is 15000 different random solutions to the proposed sudoku. Each empty square is given a random\ndigit between 1 and 9. The higher the population size the greater chance of success will be but time of execution will also increase.`\n\n\nexport default intro\n"]},"metadata":{},"sourceType":"module"}